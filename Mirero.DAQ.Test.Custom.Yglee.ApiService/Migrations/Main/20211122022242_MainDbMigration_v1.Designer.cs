// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mirero.DAQ.Test.Custom.Yglee.ApiService.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mirero.DAQ.Test.Custom.Yglee.ApiService.Migrations.Main
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20211122022242_MainDbMigration_v1")]
    partial class MainDbMigration_v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Artifact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Descriptions")
                        .HasColumnType("text")
                        .HasColumnName("descriptions");

                    b.Property<int>("JobID")
                        .HasColumnType("integer")
                        .HasColumnName("job_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("URI")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uri");

                    b.Property<string>("VolumeID")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("volume_id");

                    b.HasKey("ID");

                    b.HasIndex("JobID");

                    b.HasIndex("VolumeID");

                    b.ToTable("artifact");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Auth", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Descriptions")
                        .HasColumnType("text")
                        .HasColumnName("descriptions");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ID");

                    b.ToTable("auth");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.BatchJob", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("EndCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("end_count");

                    b.Property<DateTime>("ProgressEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("progress_end")
                        .HasDefaultValueSql("current_date");

                    b.Property<DateTime>("ProgressStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("progress_start")
                        .HasDefaultValueSql("current_date");

                    b.Property<DateTime>("ReadyStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ready_start")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("TotalCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("total_count");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("ID");

                    b.ToTable("batch_job");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.ClassCode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("ClassCodeSetID")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("class_code_set_id");

                    b.Property<string>("Class_Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("class_code");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("info");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ID");

                    b.HasIndex("ClassCodeSetID");

                    b.ToTable("class_code");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.ClassCodeSet", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("task_type");

                    b.Property<DateTime>("UpdatedAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_at")
                        .HasDefaultValueSql("now()");

                    b.HasKey("ID");

                    b.ToTable("class_code_set");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Dataset", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Descriptions")
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPTIONS");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NAME");

                    b.Property<string>("URI")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("URI");

                    b.Property<string>("VolumeID")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VOLUME_ID");

                    b.HasKey("ID");

                    b.HasIndex("VolumeID");

                    b.ToTable("dataset");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Job", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("BatchJobID")
                        .HasColumnType("integer")
                        .HasColumnName("batch_job_id");

                    b.Property<DateTime>("ProgressEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("progress_end")
                        .HasDefaultValueSql("current_date");

                    b.Property<DateTime>("ProgressStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("progress_start")
                        .HasDefaultValueSql("current_date");

                    b.Property<DateTime>("ReadyStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ready_start")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("WorkerID")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("worker_id");

                    b.HasKey("ID");

                    b.HasIndex("BatchJobID");

                    b.ToTable("job");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.JobLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Exception")
                        .HasColumnType("text")
                        .HasColumnName("exception");

                    b.Property<int>("JobID")
                        .HasColumnType("integer")
                        .HasColumnName("job_id");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("properties");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("time")
                        .HasDefaultValueSql("now()");

                    b.HasKey("ID");

                    b.ToTable("job_log");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Server", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("CPUCount")
                        .HasColumnType("integer")
                        .HasColumnName("cpu_count");

                    b.Property<int>("CPUMemory")
                        .HasColumnType("integer")
                        .HasColumnName("cpu_memory");

                    b.Property<int>("GPUCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("gpu_count");

                    b.Property<int>("GPUMemory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("gpu_memory");

                    b.Property<string>("GPUName")
                        .HasColumnType("text")
                        .HasColumnName("gpu_name");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ip");

                    b.Property<string>("OSType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("os_type");

                    b.Property<string>("OSVersion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("os_version");

                    b.Property<int>("Port")
                        .HasColumnType("integer")
                        .HasColumnName("port");

                    b.Property<string>("ServerType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("server_type");

                    b.HasKey("ID");

                    b.ToTable("server");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.User", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Descriptions")
                        .HasColumnType("text")
                        .HasColumnName("descriptions");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("ID");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.UserAuthMap", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<string>("AuthID")
                        .HasColumnType("text")
                        .HasColumnName("auth_id");

                    b.HasKey("UserID", "AuthID");

                    b.HasIndex("AuthID");

                    b.ToTable("user_auth_map");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Volume", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<string>("URI")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uri");

                    b.Property<int>("Usage")
                        .HasColumnType("integer")
                        .HasColumnName("usage");

                    b.HasKey("ID");

                    b.ToTable("volume");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Worker", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("CPUCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("cpu_count");

                    b.Property<int>("CPUMemory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("cpu_memory");

                    b.Property<int>("GPUCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("gpu_count");

                    b.Property<int>("GPUMemory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("gpu_memory");

                    b.Property<string>("Properties")
                        .HasColumnType("text")
                        .HasColumnName("properties");

                    b.Property<string>("ServerID")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("server_id");

                    b.Property<string>("WorkerType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("worker_type");

                    b.HasKey("ID");

                    b.HasIndex("ServerID");

                    b.ToTable("worker");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Artifact", b =>
                {
                    b.HasOne("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Job", "Job")
                        .WithMany("Artifacts")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Volume", "Volume")
                        .WithMany("Artifacts")
                        .HasForeignKey("VolumeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Volume");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.ClassCode", b =>
                {
                    b.HasOne("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.ClassCodeSet", "ClassCodeSet")
                        .WithMany("ClassCodes")
                        .HasForeignKey("ClassCodeSetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassCodeSet");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Dataset", b =>
                {
                    b.HasOne("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Volume", "Volume")
                        .WithMany("Datasets")
                        .HasForeignKey("VolumeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volume");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Job", b =>
                {
                    b.HasOne("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.BatchJob", "BatchJob")
                        .WithMany("Jobs")
                        .HasForeignKey("BatchJobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchJob");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.UserAuthMap", b =>
                {
                    b.HasOne("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Auth", "Auth")
                        .WithMany("UserAuthMaps")
                        .HasForeignKey("AuthID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.User", "User")
                        .WithMany("UserAuthMaps")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auth");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Worker", b =>
                {
                    b.HasOne("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Server", "Server")
                        .WithMany("Workers")
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Auth", b =>
                {
                    b.Navigation("UserAuthMaps");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.BatchJob", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.ClassCodeSet", b =>
                {
                    b.Navigation("ClassCodes");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Job", b =>
                {
                    b.Navigation("Artifacts");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Server", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.User", b =>
                {
                    b.Navigation("UserAuthMaps");
                });

            modelBuilder.Entity("Mirero.DAQ.Test.Custom.Yglee.ApiService.Models.Entity.Main.Volume", b =>
                {
                    b.Navigation("Artifacts");

                    b.Navigation("Datasets");
                });
#pragma warning restore 612, 618
        }
    }
}
